#ifndef CAMERA_H
#define CAMERA_H

#include "common.h"

class camera {
    public:
        camera(
		point3 lookfrom,
		point3 lookat,
		vec3 vup,	
		double vfov, // vertical field-of-view in degrees
		double aspect_ratio
        ) {
		up = vup;
		fov = vfov;
		ratio = aspect_ratio;
		set_transform(lookfrom,lookat);
        }

        ray get_ray(double s, double t) const {
            return ray(origin, lower_left_corner + s*horizontal + t*vertical - origin);
        }

	void set_transform(point3 from, point3 at) {
		auto theta = degrees_to_radians(fov);
		auto h = tan(theta/2);
		auto viewport_height = 2.0 * h;
		auto viewport_width = ratio * viewport_height;

		auto w = unit_vector(from - at);
		auto u = unit_vector(cross(up, w));
		auto v = cross(w, u);

		origin = from;
		horizontal = viewport_width * u;
		vertical = viewport_height * v;
		lower_left_corner = origin - horizontal/2 - vertical/2 - w;	
	}

    private:
	double fov;
	vec3 up;
        point3 origin;
        point3 lower_left_corner;
        vec3 horizontal;
        vec3 vertical;
	double ratio;
};
#endif
